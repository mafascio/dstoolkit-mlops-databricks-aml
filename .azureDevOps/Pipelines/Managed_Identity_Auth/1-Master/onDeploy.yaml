
name:                                     Managed Identity MLOps Databricks Deployment

trigger:                                  none
pr:                                       none



# TO DO : Retrofit This Code So You Can Choose The Environments You Want To Deploy. This Will be
# Helpfull if a Release Pipeline Fails And We Need To Rewind The Commit And Redeploy

# Create A Condition That This Will Not Run When A Pull Request Is Launched. Presumably a CI only Condition
# After The First Environment Deployment, This YAML Pipeline is Triggering Alongside onRealease. I have Set
# pr == none For Now To Prevent This Behaviour 


pool:
  name:                                'vmss-linux-pool'

variables:
- group:                                    'ADO-Secrets'

parameters:

- name:         ENVIRONMENT
  displayName:  Choose Environment 
  default:      GenesisDeployment
  type:         string 
  values:
  - Sandbox
  - Development
  - UAT
  - Production
  - GenesisDeployment


- name:         MI_VMSS_NAME
  displayName:  Enter name of Virtual Machine Scale Set With Managed Identity On Sub Enabled
  default:      vmsslinux
  type:         string 


- name:         azureSubscription
  displayName:  Enter Service Connection Name
  default:      mi-vmss-spn
  type:         string 


- name:         PULL_BRANCH
  displayName:  Branch For DBX Repo Folders
  default:      ciarand/dbx_pipeline
  type:         string 


stages:
  
  - stage:                                SandboxDeploy
    condition:                            or(eq('${{ parameters.ENVIRONMENT }}', 'GenesisDeployment'), eq('${{ parameters.ENVIRONMENT }}', 'Sandbox'))                      
    displayName:                          SandboxDeploy
    jobs:
      - template:                         ..\2-Jobs\jobDatabricks.yaml
        parameters:
          Environment:                    Sandbox
          azureSubscription:              ${{ parameters.azureSubscription }}
          enableRepoPull:                 true # Should really be false 
          branchName:                     main      
          MI_VMSS_NAME:                   ${{ parameters.MI_VMSS_NAME }}
  
  - stage:                                DevelopmentDeploy   
    condition:                            or(eq('${{ parameters.ENVIRONMENT }}', 'GenesisDeployment'), eq('${{ parameters.ENVIRONMENT }}', 'Development'))                                
    displayName:                          DevelopmentDeploy
    dependsOn: [] 
    jobs:
      - template:                         ..\2-Jobs\jobDatabricks.yaml
        parameters:
          Environment:                    Development
          azureSubscription:              ${{ parameters.azureSubscription }}
          enableRepoPull:                 false
          branchName:                     main
          updateFolder:                   None
          MI_VMSS_NAME:                   ${{ parameters.MI_VMSS_NAME }}

  - stage:                                UATDeploy 
    condition:                            or(eq('${{ parameters.ENVIRONMENT }}', 'GenesisDeployment'), eq('${{ parameters.ENVIRONMENT }}', 'UAT'))                                    
    displayName:                          UATDeploy
    dependsOn: [] 
    jobs:
      - template:                         ..\2-Jobs\jobDatabricks.yaml
        parameters:
          Environment:                    UAT
          azureSubscription:              ${{ parameters.azureSubscription }}
          enableRepoPull:                 false
          branchName:                     main
          releaseBranch:                  'release/1'
          MI_VMSS_NAME:                   ${{ parameters.MI_VMSS_NAME }}


